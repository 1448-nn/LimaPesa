// Generated by view binder compiler. Do not edit!
package com.example.limape.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.example.limape.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityVerificationBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button button3;

  @NonNull
  public final EditText editTextNumber1;

  @NonNull
  public final EditText editTextNumber5;

  @NonNull
  public final EditText editTextNumber6;

  @NonNull
  public final EditText editTextNumber7;

  @NonNull
  public final TextView textView13;

  @NonNull
  public final TextView textView16;

  private ActivityVerificationBinding(@NonNull ConstraintLayout rootView, @NonNull Button button3,
      @NonNull EditText editTextNumber1, @NonNull EditText editTextNumber5,
      @NonNull EditText editTextNumber6, @NonNull EditText editTextNumber7,
      @NonNull TextView textView13, @NonNull TextView textView16) {
    this.rootView = rootView;
    this.button3 = button3;
    this.editTextNumber1 = editTextNumber1;
    this.editTextNumber5 = editTextNumber5;
    this.editTextNumber6 = editTextNumber6;
    this.editTextNumber7 = editTextNumber7;
    this.textView13 = textView13;
    this.textView16 = textView16;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityVerificationBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityVerificationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_verification, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityVerificationBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button3;
      Button button3 = rootView.findViewById(id);
      if (button3 == null) {
        break missingId;
      }

      id = R.id.editTextNumber1;
      EditText editTextNumber1 = rootView.findViewById(id);
      if (editTextNumber1 == null) {
        break missingId;
      }

      id = R.id.editTextNumber5;
      EditText editTextNumber5 = rootView.findViewById(id);
      if (editTextNumber5 == null) {
        break missingId;
      }

      id = R.id.editTextNumber6;
      EditText editTextNumber6 = rootView.findViewById(id);
      if (editTextNumber6 == null) {
        break missingId;
      }

      id = R.id.editTextNumber7;
      EditText editTextNumber7 = rootView.findViewById(id);
      if (editTextNumber7 == null) {
        break missingId;
      }

      id = R.id.textView13;
      TextView textView13 = rootView.findViewById(id);
      if (textView13 == null) {
        break missingId;
      }

      id = R.id.textView16;
      TextView textView16 = rootView.findViewById(id);
      if (textView16 == null) {
        break missingId;
      }

      return new ActivityVerificationBinding((ConstraintLayout) rootView, button3, editTextNumber1,
          editTextNumber5, editTextNumber6, editTextNumber7, textView13, textView16);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
